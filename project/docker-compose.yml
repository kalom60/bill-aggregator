services:
  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    env_file: .env
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  user-service:
    build:
      context: ./../user-service
      dockerfile: ./../user-service/user-service.dockerfile
    restart: always
    env_file: .env
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_SSLMODE: "disable"
      SECRET_KEY: ${SECRET_KEY}

  utility-provider-service:
    build:
      context: ./../utility-provider-service
      dockerfile: ./../utility-provider-service/utility-provider-service.dockerfile
    restart: always
    env_file: .env
    ports:
      - "8082:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_SSLMODE: "disable"

  postgres:
    image: "postgres:latest"
    ports:
      - "5432:5432"
    restart: always
    env_file: .env
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
